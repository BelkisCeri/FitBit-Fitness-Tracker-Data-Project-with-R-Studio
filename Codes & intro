---
title: "FitBit Tracker Project in R Studio
output: html_document
date: "2022-09-09"
language: R
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Understnad the Project 
##About Dataset
###Content
This dataset generated by respondents to a distributed survey via Amazon Mechanical Turk between 03.12.2016-05.12.2016. Thirty eligible Fitbit users consented to the submission of personal tracker data, including minute-level output for physical activity, heart rate, and sleep monitoring. Individual reports can be parsed by export session ID (column A) or timestamp (column B). Variation between output represents use of different types of Fitbit trackers and individual tracking behaviors / preferences.

The outcome variable for the study was the activity class; lying, sitting, walking self-paced, 3 METS, 5 METS, and 7 METS.
Minute-by-minute heart rate, steps, distance, and calories from Apple Watch and Fitbit 

## SECTION -1 Understand the Data and the Aim of the study

Key objectives:¶
1.Identify the business task:

The company better target their marketing efforts into their customer's needs based on their usage of their fitness smart devices. With this info then make high-level recommendations for how these trends can inform Bellabeat marketing strategy.
2.Consider key stakeholders:

The main stakeholders here are Urška Sršen, Bellabeat’s co-founder and Chief Creative Officer; Sando Mur, Mathematician and Bellabeat’s cofounder; And the rest of the Bellabeat marketing analytics team.
3.The business task:

Given these facts, the business task is defined as searching for user patterns of usage of their smart devices in order to gain insights that would later better orientate marketing decisions. So, in one phrase it would be:

How do our users use our smart devices?

# Introduciton to Fitbit Project
## SECTION 2 : Pre-processing/Data preparation 
Key objectives:
1.Determine the credibility of the data:

The data is public data from FitBit Fitness Tracker Data. It's a dataset from thirty fitbit users that includes minute-level output for physical activity, heart rate, and sleep monitoring. It's a good database segmented in several tables with different aspects of the data of the device with lots of details about the user behaviour.
2.Sort and filter the data:

For this analysis I'm going to focus on the daily timeframe as my analysis is focused on detecting high-level trends in usage, not in the detailed performance of the users. For that the most interesting data for me is all the daily activity and the sleep data as they will probably show some interesting patterns but I'll have to merge some tables together to do my analysis.


# Understand the data set
Let's take a look to our data to check the Noise and Outliers: 
We need to fill in missing values, smooth noisy data, remove outliers and resolve inconsistencies
# see the colum names and instances


```{r}
project_data<- read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
print(names(project_data))
```


```{r}
# Then time to check categorical and factor veriable in the data set
project_data<- read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv", header = TRUE, colClasses = c("factor", "factor", "factor", "numeric"))
```
Comment: Let's change the  
Genders:  0 = Male, 1 = Female
Device: 0 =  Apple watch, 1 = Fit Bit
Activity: 
1 = Lying
2 = Sitting
3 = Self_Pace_walk
4 = Running_3_METs
5 = Running_5_METs
6 = Running_7_METs


Comment: After I changed the format of the datas, There is no value assinged as a characcter in the csv file. Now I can continue work on it

```{r}
# Reading data from csv file
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
summary(project_data)
```
Comments:
As we see that weight of one user has 669.00 kg which is an impossible and illogical value which is noisy, so it needs to be fix. I need to go to the data set an find this value to replace it with the average weight of the sample, is 69.93 kg.

```{r}
library(pastecs)
stat.desc(project_data)
```
Comment: We found the descriptive statistical values of the data above. 

# To see the data types of the entities
```{r}
str(project_data) 
```
# See the NULL values

After cheking the NUll values
{r}
length(na.omit(project_data))
mean(project_data, na.rm = TRUE) 
is.na(project_data)

mean(is.na(project_data))
#_____________
Comment:
As a result of checking missing values, there are 20 of non-missing observations in the data set.Those are on-numerical datas

#Check the outliers
#1. For Age & Steps
To decreases the error variance and increase the power of statistical tests, we need to check the outliers of the data.
```{r}
library("ggplot2")
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
plot(project_data$age, project_data$steps, ann = FALSE) 
title(main = "scatter plot",sub = "Ages vs. Steps", xlab = "age", ylab = "steps")

```

```{r}
plot(project_data$age, project_data$steps,
     col = "pink", 
     main = "scatter plot",
     col.main = "blue",
     sub = "Ages vs. Steps", 
     col.sub = "blue", 
     xlab = "Age", 
     ylab = "Steps", 
     col.lab = "red",
     xlim = c(10,60), 
     ylim = c(0,2000)) 
```
#2. For Gender & Calorie

```{r}
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
plot(project_data$gender, project_data$calories, ann = FALSE) 
title(main = "scatter plot",sub = "Gender vs. Calorie", xlab = "Gender", ylab = "Calorie")
```
```{r}
plot(project_data$gender, project_data$age,
     col = "purple", 
     main = "scatter plot", cex.main = 1.5,
     col.main = "blue",
     sub = "Gender vs. Age",cex.main = 1.5,
     col.sub = "blue", 
     xlab = "Gender", 
     ylab = "CAge",font.lab = 1,
     col.lab = "red",
     xlim = c(0,2), 
     ylim = c(0,70),
     font.axis = 2)

```
#3. For Weight & Calorie


```{r}
plot(project_data$weight, project_data$height) 
mtext("Weight & Height", col = "red", font = 2, cex = 1.2) 
plot(project_data$age, project_data$weight)
mtext("Age and weight", col = "red", font = 2, cex = 1.2)
```
```{r}
new_data<-plot(project_data$age, project_data$weight)

mtext( "Age and weight", col = "red", font = 2,cex = 1.2)
```

## Drawing the Plots

To get to know our data: 
Let's look at the distributions (symmetric, normal, skewed), outliers, correlations and inter-relationships

```{r pressure, echo=FALSE}
plot(project_data$age)

library("ggplot2")

plot(project_data$age, project_data$steps, ann = FALSE) 


ggplot(project_data) +
  aes(x = age) +
  geom_histogram(bins = 30L, fill = "#0c4c8a") +
  theme_minimal()

hist(project_data$age,
  xlab = "age",
  main = "Histogram of age",
  breaks = sqrt(nrow(project_data)))
```

```{r}
ggplot(data = project_data, aes (x=steps_times_distance, y = calories))+
  geom_point(color = "orange") +
  geom_smooth()+ 
  theme(axis.text.x = element_text(angle = 90))+
  labs (title = "Daily Calories and Daily Total Steps", subtitle = "As number of steps increase, the daily Calories burned increase too",  x = "Total Daily Steps", y = "Total Daily Calories")+
  theme(plot.title = element_text(size = 20), plot.subtitle = element_text(size = 13))
```


```{r}
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
Prop <- c("project_data.activity")

```

```{r}
library(ggplot2)
library(tidyverse)

library(hrbrthemes)
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")

p_data <- project_data %>%
  filter( calories>0 ) %>%
  ggplot( aes(x=calories)) +
    geom_histogram( binwidth=3, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
    ggtitle("Bin size = 3") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15)
    )

p<-ggplot(project_data, aes(x=weight)) + 
  geom_histogram(color="pink", fill="pink")
p
```

```{r}

ggplot(project_data, aes(x=weight)) + 
 geom_histogram(aes(y=..density..), colour="black", fill="white")+
 geom_density(alpha=.2, fill="#FF6666")
```

```{r}
ggplot(project_data, aes(x=weight, color=activity)) +
  geom_histogram(fill="blue", alpha=0.1, position="identity")
```


```{r}
p<-ggplot(project_data, aes(x=gender, color=activity)) +
  geom_histogram(fill="white", position="dodge")+
  theme(legend.position="top")
p
```



```{r}

p<-ggplot(project_data, aes(x=gender, fill=gender,color=activity)) +
  geom_histogram(position="identity", alpha=0.8)
p
```

# Let us combine 4 plots in 2 rows and 2 columns.
# DID NOT WORK OUT BELOW QUERY
```{r}
library(ggpubr)
library(dplyr)
library(forcats)

library(ggplot2)
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")

ggplot(project_data, aes(x = activity, y = calories, fill = activity)) + 
  geom_boxplot() +
  coord_flip()

```
Comments:
Running 5 METs is the most frequent prefered activity that the fitbit users burn more calories. In the box plot the bow plot, we see that there is outlieers in the sitting, running 7 METs and Lying positions, 
which more calories that the common ....
```{r}
library(ggplot2)
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")

ggplot(project_data, aes(x = gender, y = steps_times_distance, fill = gender)) + 
  geom_boxplot()

ggplot(project_data, aes(x = device, y =X1 , fill = device)) + 
  geom_boxplot()

```
  
```{r}
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
init_par<-par(no.readonly = TRUE)   # # store the current parameter settings
par(mfrow = c(2,2))   #specify that 4 plots to be combined and filled by rows 
par(mar = rep(2, 4)) #Specify the marigin```
plot(project_data$hear_rate)   # specify the graph
plot(project_data$distance, project_data$steps_times_distance) 
plot(project_data$activity)
```

```{r}
library(ggplot2)
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
ggplot(project_data, aes(x=reorder(activity, activity, function(x)-length(x)))) +
geom_bar(fill='pink') +  labs(x='activity')
```


```{r}
library(ggplot2)
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
ggplot(project_data, aes(x=age, y=calories)) +  geom_boxplot(fill='green')
```




```{r}
library(ggplot2) 
library(dplyr) 
library(hrbrthemes) 
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
p1 <- ggplot(project_data, aes(x=entropy_heart, y=activity)) + geom_line( color="#69b3a2") + xlab("") + theme_ipsum() + theme(axis.text.x=element_text(angle=0, hjust=1)) 
p1
```
Commnets:
entropy_heart:Heart rate variability is the variation of the time interval between consecutive heartbeats



#STep-3 Let's split data into train and test 

```{r}
set.seed(123)                              
data <- project_data
head(data)
```
Comments:
It has 16 numeric columns and categorical columns such as gender, device, activity.
#Then let's split
```{r}
split1<- sample(c(rep(0, 0.7 * nrow(data)), rep(1, 0.3 * nrow(data))))
head(split1)
# seed() is the random number generator in R.
table(split1) 
```
Commnets:
As we can see from the split1 data set, 35078 observations assign to the training data (i.e. 0), and 15033 observations assign to the testing data (i.e. 1).
#Now we can create train data set and split the data set separately.
```{r}
train <- data[split1 == 0, ] 
head(train)   #Let’s have a look at the first rows of our training data:
```

# To define our test data,
```{r}
test <- data[split1== 1, ] 
head(test)
```
# Let's write the train and test files as csv.
```{r}
# Save the testdata
df<-data.frame(test)
head(df)
write.csv(df,"test_project_data.csv")
# Save the train data
df<-data.frame(train)
head(df)
write.csv(df,"train_project_data.csv")
```

# Handle the misisng values in train adn test file
```{r}
#Read the data, replace the missing values with NA  
training.data.raw<- read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/train_project_data.csv",header=T, na.strings = c(""))

#Validate the unique values for each variable using sapply : 
sapply(training.data.raw,function(x) sum(is.na(x))) 
sapply(training.data.raw, function(x) length(unique(x))) 
```
```{r}
#Read the data, replace the missing values with NA  
test.data.raw<- read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/test_project_data.csv",header=T, na.strings = c(""))

#Validate the unique values for each variable using sapply : 
sapply(test.data.raw,function(x) sum(is.na(x))) 
sapply(test.data.raw, function(x) length(unique(x))) 
```

```{r}
library(Amelia) 
#Plot the missing values 
missmap(training.data.raw, main = "Missing values vs observed")
```
Comment:
We can say there is no missing values, because we handle them before we start analyzing our data
#Lineer Regression
```{r}
#Let's look at the correlation between weight and calorie burn
cor(project_data$weight, project_data$calories)

```
Comment:
 There is low and negative correlation between weight and calorie burn.
```{r}
#Let's look at the correlation between age and calorie burn
cor(project_data$age, project_data$calories)
```
 Comment: 
 There is  negative and moderate correlation between age and calorie burn. Young people burns more calorie than elders.
 
 # Let's create the linera model 
 
```{r}
linearMod <- lm(steps ~ calories  , data=project_data)  # build linear regression model on full data
print(linearMod)
```
 Comment:
 dist = Intercept + (β + speed)
=> dist = 149.430 +  (-2.047.84)∗steps

We have built the linear model, we also have established the relationship between the predictor and response
#Now time to see the summary of the linear model
```{r}
summary(linearMod) 
```
Comment:
 There is a significant relationship between steps counts by distance and the a calorie burn.
 Tho model predict 6% of the data.
 

# Step 2: Develop the model on the training data and use it to predict the distance on test data
```{r}
# Build the model on training data -
lmMod <- lm(calories ~ steps, data=training.data.raw)  # build the model
distPred <- predict(lmMod, training.data.raw)  # predict distance
# Review diagnostic measures.
summary (lmMod)
```
Comments:

```{r}
actuals_preds <- data.frame(cbind(actuals=test.data.raw$calories, predicteds=distPred))  # make actuals_predicteds dataframe.
correlation_accuracy <- cor(actuals_preds)  # 82.7%
head(actuals_preds)
```
```{r}
min_max_accuracy <- mean(apply(actuals_preds, 1, min) / apply(actuals_preds, 1, max)) 
min_max_accuracy
```

```{r}
mape <- mean(abs((actuals_preds$predicteds - actuals_preds$actuals))/actuals_preds$actuals)
mape 
```


#Let's graph
``{r}
plot(project_data$steps, project_data$calories, pch = 16, cex = 1.3, col = "blue", main = "Steps PLOTTED AGAINST CALORIES", xlab = "steps", ylab = "calories ()")

lim(project_data$steps ~ project_data$calories)
abline(lm(project_data$steps ~ project_data$calories))



```
```{r}
library(ggplot2)
library("hrbrthemes")
p2 <- ggplot(data, aes(x=steps, y=calories)) +
  geom_point() +
  geom_smooth(method=lm , color="red", se=FALSE)
p2 
```


# Random Forest in Fit bit data
```{r}
library(randomForest)
library(datasets)

library(caret)
library(party)

library(randomForest) 


```
# ANOVA IS there any differences between calorie burn  and type of activity ?

```'{r}
project_data = read.csv("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv")
Group1 <- c(project_data.activity.Lying) 
Group2 <- c(project_data.activity.Sitting) 
Group3 <- c(project_data.activity.Self_Pace_walk) 
Group4 <- c(project_data.activity.Running_3_METs)
Group5 <- c(project_data.activity.Running_5_METs)
Group6 <- c(project_data.activity.Running_7_METs)
Combined_Groups <- data.frame(cbind(Group1, Group2, Group3, Group4, Group5, Group6)) 
Stacked_Groups <- stack(Combined_Groups) 
Stacked_Groups 
Anova_Results <- aov(values ~ ind, data = Stacked_Groups)      # One-Way Anova 
summary(Anova_Results)


project_data <- read.csv(("/Users/belkisceri/Documents/Data_Anal_R/Final_project_Intro.Data/final project-data_50112_Sheet2.csv", header = TRUE, colClasses = c("factor", "factor", "factor", "numeric")) 

summary(project_data) 
```

#One-Way Anova:
```{r}
one.way <- aov(calories ~ activity, data = project_data) 
summary(one.way)
```
Comment: There is a significant differences between choice od activity and calorie burn.:The p-value of the factivity  variable is low (p < 0.001), so it appears that the type of activity has a real impact on the individuals calorie burn.

#Two-Way Anova:
```{r}
two.way <- aov(calories ~ activity + gender, data = project_data)
summary(two.way)
```

Comment: Adding the gender  to the model seems to have made the model a little better bt almost  same: The residual variance (the residual sum of squares went from 3315 to 3333, and both gender  and activity types are statistically significant (p-values < 0.001).

```{r}
#Interaction between variables:
interaction <- aov(calories ~ activity*gender, data = project_data) 
summary(interaction)
```

Comment: the sum Sq of the activity:gender effect is almost 60 times lower than the  effect of the activity  by it self. Therefore, there is very low interactions activity and gender differences for calorie burn.

#Adding a blocking variable: 
```{r}
blocking <- aov(calories ~ activity + gender + device, data = project_data) 
summary(blocking)
```


Comment; the Sum sq. of the device is much more than  the gender and the  activity type. Hence, we can say that whether using apple watch and fitbit device can  adding much information to the model. It also changes the sum of squares for the two independent variables

```{r}
library(ggplot2)
two.way.plot <- ggplot(project_data, aes(x = calories, y = activity, group=device)) +
geom_point(cex = 1.5, pch = 1.0,position = position_jitter(w = 0.2, h = 0))

two.way.plot
```


 Comment: There are more users who burn more calories are choice the Running  7 METs and 5 METs activity beside Self Pace walk. 
 
 
 
 {r}
hchart('pie', hcaes(x = activity, y = calorie)) %>% 
  hc_title(text = "Distribution of daily activity level in minutes",
           style = list(fontFamily = "Helvetica", fontSize = "30px"),
           align = "center") %>% 
  hc_tooltip(pointFormat = "<b>Value:</b> {point.y} <br>
                 <b>Percentage</b> {point.percentage:,.2f}%") %>% 
  hc_credits(
    enabled = TRUE, 
    text = "<em>Data Source: FitBit Fitness Tracker Data</em></span>",
    style = list(fontSize = "12px", color = 'black',type = "spline")
    )





